#Author: Aleksandra Torbe'
Feature: Shopping Cart (Basic)
  Description: Testing basic shopping cart functionalities

  Scenario Outline: (ID: Cart-B-1) Adding a product to the shopping cart # CartBasic.feature:5
    Given The "<browser>" is turned on
    And User is on Home Page
    When User clicks Do koszyka button
    And User clicks Przejdz do koszyka button
    Then Shopping cart page is opened
    And Quantity one of the products in the cart is correct
    And Title of the product in the cart is correct
    And Quantity one in the input field is correct
    And Browser can be turned off

    Examples: 

  Scenario Outline: (ID: Cart-B-1) Adding a product to the shopping cart # CartBasic.feature:17
    Given The "Chrome" is turned on                                      # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                             # _LoginCommonSteps.user_is_on_Home_Page()
    When User clicks Do koszyka button                                   # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                            # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                    # _CartCommonSteps.shopping_cart_page_is_opened()
    And Quantity one of the products in the cart is correct              # _CartCommonSteps.quantity_one_of_the_products_in_the_cart_is_correct()
    And Title of the product in the cart is correct                      # _CartCommonSteps.title_of_the_products_in_the_cart_is_correct()
    And Quantity one in the input field is correct                       # _CartCommonSteps.quantity_one_in_the_input_field_is_correct()
    And Browser can be turned off                                        # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-1) Adding a product to the shopping cart # CartBasic.feature:18
    Given The "Firefox" is turned on                                     # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                             # _LoginCommonSteps.user_is_on_Home_Page()
    When User clicks Do koszyka button                                   # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                            # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                    # _CartCommonSteps.shopping_cart_page_is_opened()
    And Quantity one of the products in the cart is correct              # _CartCommonSteps.quantity_one_of_the_products_in_the_cart_is_correct()
    And Title of the product in the cart is correct                      # _CartCommonSteps.title_of_the_products_in_the_cart_is_correct()
    And Quantity one in the input field is correct                       # _CartCommonSteps.quantity_one_in_the_input_field_is_correct()
    And Browser can be turned off                                        # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-2) Information about a product is displayed # CartBasic.feature:20
    Given The "<browser>" is turned on
    And User is on Home Page
    And User goes to chosen product's page
    And User clicks Do koszyka button on this page
    And User clicks Przejdz do koszyka button
    Then Shopping cart page is opened
    And Information about product's title is displayed
    And Information about product's author is displayed
    And Information about product's sending time is displayed
    And Information about product's price is displayed
    And Product's title is linked to its page
    And Product's image is linked to its page
    And Browser can be turned off

    Examples: 

  Scenario Outline: (ID: Cart-B-2) Information about a product is displayed # CartBasic.feature:36
    Given The "Chrome" is turned on                                         # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                # _LoginCommonSteps.user_is_on_Home_Page()
    And User goes to chosen product's page                                  # CartShowingProductInfoSteps.user_goes_to_chosen_product_s_page()
    And User clicks Do koszyka button on this page                          # CartProductAddingFromPageSteps.user_clicks_Do_koszyka_button_on_this_page()
    And User clicks Przejdz do koszyka button                               # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                       # _CartCommonSteps.shopping_cart_page_is_opened()
    And Information about product's title is displayed                      # CartShowingProductInfoSteps.information_about_product_s_title_is_displayed()
    And Information about product's author is displayed                     # CartShowingProductInfoSteps.information_about_product_s_author_is_displayed()
    And Information about product's sending time is displayed               # CartShowingProductInfoSteps.information_about_product_s_sending_time_is_displayed()
    And Information about product's price is displayed                      # CartShowingProductInfoSteps.information_about_product_s_price_is_displayed()
    And Product's title is linked to its page                               # CartShowingProductInfoSteps.product_s_title_is_linked_to_its_page()
    And Product's image is linked to its page                               # CartShowingProductInfoSteps.product_s_image_is_linked_to_its_page()
    And Browser can be turned off                                           # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-2) Information about a product is displayed # CartBasic.feature:37
    Given The "Firefox" is turned on                                        # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                # _LoginCommonSteps.user_is_on_Home_Page()
    And User goes to chosen product's page                                  # CartShowingProductInfoSteps.user_goes_to_chosen_product_s_page()
    And User clicks Do koszyka button on this page                          # CartProductAddingFromPageSteps.user_clicks_Do_koszyka_button_on_this_page()
    And User clicks Przejdz do koszyka button                               # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                       # _CartCommonSteps.shopping_cart_page_is_opened()
    And Information about product's title is displayed                      # CartShowingProductInfoSteps.information_about_product_s_title_is_displayed()
    And Information about product's author is displayed                     # CartShowingProductInfoSteps.information_about_product_s_author_is_displayed()
    And Information about product's sending time is displayed               # CartShowingProductInfoSteps.information_about_product_s_sending_time_is_displayed()
    And Information about product's price is displayed                      # CartShowingProductInfoSteps.information_about_product_s_price_is_displayed()
    And Product's title is linked to its page                               # CartShowingProductInfoSteps.product_s_title_is_linked_to_its_page()
    And Product's image is linked to its page                               # CartShowingProductInfoSteps.product_s_image_is_linked_to_its_page()
    And Browser can be turned off                                           # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-3) Adding a product to the shopping cart from a product's page # CartBasic.feature:39
    Given The "<browser>" is turned on
    And User is on Home Page
    When User goes to some product's page
    And User clicks Do koszyka button on this page
    And User clicks Przejdz do koszyka button
    Then Shopping cart page is opened
    And Quantity one of the products in the cart is correct
    And Title of the product in the cart is correct
    And Quantity one in the input field is correct
    And Browser can be turned off

    Examples: 

  Scenario Outline: (ID: Cart-B-3) Adding a product to the shopping cart from a product's page # CartBasic.feature:52
    Given The "Chrome" is turned on                                                            # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                                   # _LoginCommonSteps.user_is_on_Home_Page()
    When User goes to some product's page                                                      # CartProductAddingFromPageSteps.user_goes_to_a_product_s_page()
    And User clicks Do koszyka button on this page                                             # CartProductAddingFromPageSteps.user_clicks_Do_koszyka_button_on_this_page()
    And User clicks Przejdz do koszyka button                                                  # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                                          # _CartCommonSteps.shopping_cart_page_is_opened()
    And Quantity one of the products in the cart is correct                                    # _CartCommonSteps.quantity_one_of_the_products_in_the_cart_is_correct()
    And Title of the product in the cart is correct                                            # _CartCommonSteps.title_of_the_products_in_the_cart_is_correct()
    And Quantity one in the input field is correct                                             # _CartCommonSteps.quantity_one_in_the_input_field_is_correct()
    And Browser can be turned off                                                              # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-3) Adding a product to the shopping cart from a product's page # CartBasic.feature:53
    Given The "Firefox" is turned on                                                           # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                                   # _LoginCommonSteps.user_is_on_Home_Page()
    When User goes to some product's page                                                      # CartProductAddingFromPageSteps.user_goes_to_a_product_s_page()
    And User clicks Do koszyka button on this page                                             # CartProductAddingFromPageSteps.user_clicks_Do_koszyka_button_on_this_page()
    And User clicks Przejdz do koszyka button                                                  # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                                          # _CartCommonSteps.shopping_cart_page_is_opened()
    And Quantity one of the products in the cart is correct                                    # _CartCommonSteps.quantity_one_of_the_products_in_the_cart_is_correct()
    And Title of the product in the cart is correct                                            # _CartCommonSteps.title_of_the_products_in_the_cart_is_correct()
    And Quantity one in the input field is correct                                             # _CartCommonSteps.quantity_one_in_the_input_field_is_correct()
    And Browser can be turned off                                                              # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-4) Adding the same product to the shopping cart again # CartBasic.feature:55
    Description: When user adds a product that is already in the cart
    system should change quantity instead of adding a new position.

    Given The "<browser>" is turned on
    And User is on Home Page
    When User clicks Do koszyka button
    And User clicks Powroc do sklepu button
    And User clicks Do koszyka button
    And User clicks Przejdz do koszyka button
    Then Shopping cart page is opened
    And Quantity two of the products in the cart is correct
    And Title of the product in the cart is correct
    And Quantity two in the input field is correct
    And Browser can be turned off

    Examples: 

  Scenario Outline: (ID: Cart-B-4) Adding the same product to the shopping cart again # CartBasic.feature:71
    Description: When user adds a product that is already in the cart
    system should change quantity instead of adding a new position.

    Given The "Chrome" is turned on                                                   # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                          # _LoginCommonSteps.user_is_on_Home_Page()
    When User clicks Do koszyka button                                                # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Powroc do sklepu button                                           # CartProductAddingSameProductAgainSteps.user_clicks_Powroc_do_sklepu_button()
    And User clicks Do koszyka button                                                 # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                         # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                                 # _CartCommonSteps.shopping_cart_page_is_opened()
    And Quantity two of the products in the cart is correct                           # _CartCommonSteps.quantity_two_of_the_products_in_the_cart_is_correct()
    And Title of the product in the cart is correct                                   # _CartCommonSteps.title_of_the_products_in_the_cart_is_correct()
    And Quantity two in the input field is correct                                    # _CartCommonSteps.quantity_two_in_the_input_field_is_correct()
    And Browser can be turned off                                                     # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-4) Adding the same product to the shopping cart again # CartBasic.feature:72
    Description: When user adds a product that is already in the cart
    system should change quantity instead of adding a new position.

    Given The "Firefox" is turned on                                                  # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                          # _LoginCommonSteps.user_is_on_Home_Page()
    When User clicks Do koszyka button                                                # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Powroc do sklepu button                                           # CartProductAddingSameProductAgainSteps.user_clicks_Powroc_do_sklepu_button()
    And User clicks Do koszyka button                                                 # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                         # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                                 # _CartCommonSteps.shopping_cart_page_is_opened()
    And Quantity two of the products in the cart is correct                           # _CartCommonSteps.quantity_two_of_the_products_in_the_cart_is_correct()
    And Title of the product in the cart is correct                                   # _CartCommonSteps.title_of_the_products_in_the_cart_is_correct()
    And Quantity two in the input field is correct                                    # _CartCommonSteps.quantity_two_in_the_input_field_is_correct()
    And Browser can be turned off                                                     # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-5) Adding more products to the shopping cart # CartBasic.feature:74
    Given The "<browser>" is turned on
    And User is on Home Page
    When User clicks Do koszyka button
    And User clicks Powroc do sklepu button
    And User clicks another Do koszyka button
    And User clicks Przejdz do koszyka button
    Then Shopping cart page is opened
    And Quantity two of the products in the cart is correct
    And Quantity one in the input field is correct
    And Browser can be turned off

    Examples: 

  Scenario Outline: (ID: Cart-B-5) Adding more products to the shopping cart # CartBasic.feature:87
    Given The "Chrome" is turned on                                          # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                 # _LoginCommonSteps.user_is_on_Home_Page()
    When User clicks Do koszyka button                                       # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Powroc do sklepu button                                  # CartProductAddingSameProductAgainSteps.user_clicks_Powroc_do_sklepu_button()
    And User clicks another Do koszyka button                                # CartMoreProductsAddingSteps.user_clicks_another_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                        # _CartCommonSteps.shopping_cart_page_is_opened()
    And Quantity two of the products in the cart is correct                  # _CartCommonSteps.quantity_two_of_the_products_in_the_cart_is_correct()
    And Quantity one in the input field is correct                           # _CartCommonSteps.quantity_one_in_the_input_field_is_correct()
    And Browser can be turned off                                            # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-5) Adding more products to the shopping cart # CartBasic.feature:88
    Given The "Firefox" is turned on                                         # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                 # _LoginCommonSteps.user_is_on_Home_Page()
    When User clicks Do koszyka button                                       # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Powroc do sklepu button                                  # CartProductAddingSameProductAgainSteps.user_clicks_Powroc_do_sklepu_button()
    And User clicks another Do koszyka button                                # CartMoreProductsAddingSteps.user_clicks_another_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                        # _CartCommonSteps.shopping_cart_page_is_opened()
    And Quantity two of the products in the cart is correct                  # _CartCommonSteps.quantity_two_of_the_products_in_the_cart_is_correct()
    And Quantity one in the input field is correct                           # _CartCommonSteps.quantity_one_in_the_input_field_is_correct()
    And Browser can be turned off                                            # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-6) Final value (sum) of products in the shopping cart # CartBasic.feature:90
    Given The "<browser>" is turned on
    And User is on Home Page
    When User clicks Do koszyka button
    And User clicks Powroc do sklepu button
    And User clicks another Do koszyka button
    And User clicks Przejdz do koszyka button
    Then Shopping cart page is opened
    And Summed value of products in the cart is correct
    And Browser can be turned off

    Examples: 

  Scenario Outline: (ID: Cart-B-6) Final value (sum) of products in the shopping cart # CartBasic.feature:102
    Given The "Chrome" is turned on                                                   # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                          # _LoginCommonSteps.user_is_on_Home_Page()
    When User clicks Do koszyka button                                                # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Powroc do sklepu button                                           # CartProductAddingSameProductAgainSteps.user_clicks_Powroc_do_sklepu_button()
    And User clicks another Do koszyka button                                         # CartMoreProductsAddingSteps.user_clicks_another_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                         # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                                 # _CartCommonSteps.shopping_cart_page_is_opened()
    And Summed value of products in the cart is correct                               # CartSumSteps.summed_value_of_products_in_the_cart_is_correct()
    And Browser can be turned off                                                     # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-6) Final value (sum) of products in the shopping cart # CartBasic.feature:103
    Given The "Firefox" is turned on                                                  # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                          # _LoginCommonSteps.user_is_on_Home_Page()
    When User clicks Do koszyka button                                                # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Powroc do sklepu button                                           # CartProductAddingSameProductAgainSteps.user_clicks_Powroc_do_sklepu_button()
    And User clicks another Do koszyka button                                         # CartMoreProductsAddingSteps.user_clicks_another_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                         # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                                 # _CartCommonSteps.shopping_cart_page_is_opened()
    And Summed value of products in the cart is correct                               # CartSumSteps.summed_value_of_products_in_the_cart_is_correct()
    And Browser can be turned off                                                     # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-7) Removing a product from the shopping cart # CartBasic.feature:105
    Given The "<browser>" is turned on
    And User is on Home Page
    And User clicks Do koszyka button
    And User clicks Przejdz do koszyka button
    Then Shopping cart page is opened
    When User clicks Usun hyperlink
    Then Quantity zero of the products in the cart is correct
    And Information about empty cart is displayed
    And Browser can be turned off

    Examples: 

  Scenario Outline: (ID: Cart-B-7) Removing a product from the shopping cart # CartBasic.feature:117
    Given The "Chrome" is turned on                                          # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                 # _LoginCommonSteps.user_is_on_Home_Page()
    And User clicks Do koszyka button                                        # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                        # _CartCommonSteps.shopping_cart_page_is_opened()
    When User clicks Usun hyperlink                                          # CartProductRemovingSteps.user_clicks_Usun_hyperlink()
    Then Quantity zero of the products in the cart is correct                # _CartCommonSteps.quantity_zero_of_the_products_in_the_cart_is_correct()
    And Information about empty cart is displayed                            # CartProductDisappearsAfterLogoutSteps.information_about_empty_cart_is_displayed()
    And Browser can be turned off                                            # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-7) Removing a product from the shopping cart # CartBasic.feature:118
    Given The "Firefox" is turned on                                         # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                 # _LoginCommonSteps.user_is_on_Home_Page()
    And User clicks Do koszyka button                                        # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                        # _CartCommonSteps.shopping_cart_page_is_opened()
    When User clicks Usun hyperlink                                          # CartProductRemovingSteps.user_clicks_Usun_hyperlink()
    Then Quantity zero of the products in the cart is correct                # _CartCommonSteps.quantity_zero_of_the_products_in_the_cart_is_correct()
    And Information about empty cart is displayed                            # CartProductDisappearsAfterLogoutSteps.information_about_empty_cart_is_displayed()
    And Browser can be turned off                                            # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-8) Removing a product from the shopping cart when more products are in it # CartBasic.feature:120
    Given The "<browser>" is turned on
    And User is on Home Page
    And User clicks Do koszyka button
    And User clicks Powroc do sklepu button
    And User clicks another Do koszyka button
    And User clicks Przejdz do koszyka button
    Then Shopping cart page is opened
    When User clicks Usun hyperlink
    Then Quantity one of the products in the cart is correct
    And Browser can be turned off

    Examples: 

  Scenario Outline: (ID: Cart-B-8) Removing a product from the shopping cart when more products are in it # CartBasic.feature:133
    Given The "Chrome" is turned on                                                                       # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                                              # _LoginCommonSteps.user_is_on_Home_Page()
    And User clicks Do koszyka button                                                                     # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Powroc do sklepu button                                                               # CartProductAddingSameProductAgainSteps.user_clicks_Powroc_do_sklepu_button()
    And User clicks another Do koszyka button                                                             # CartMoreProductsAddingSteps.user_clicks_another_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                                             # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                                                     # _CartCommonSteps.shopping_cart_page_is_opened()
    When User clicks Usun hyperlink                                                                       # CartProductRemovingSteps.user_clicks_Usun_hyperlink()
    Then Quantity one of the products in the cart is correct                                              # _CartCommonSteps.quantity_one_of_the_products_in_the_cart_is_correct()
    And Browser can be turned off                                                                         # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-8) Removing a product from the shopping cart when more products are in it # CartBasic.feature:134
    Given The "Firefox" is turned on                                                                      # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                                              # _LoginCommonSteps.user_is_on_Home_Page()
    And User clicks Do koszyka button                                                                     # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Powroc do sklepu button                                                               # CartProductAddingSameProductAgainSteps.user_clicks_Powroc_do_sklepu_button()
    And User clicks another Do koszyka button                                                             # CartMoreProductsAddingSteps.user_clicks_another_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                                             # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    Then Shopping cart page is opened                                                                     # _CartCommonSteps.shopping_cart_page_is_opened()
    When User clicks Usun hyperlink                                                                       # CartProductRemovingSteps.user_clicks_Usun_hyperlink()
    Then Quantity one of the products in the cart is correct                                              # _CartCommonSteps.quantity_one_of_the_products_in_the_cart_is_correct()
    And Browser can be turned off                                                                         # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-9) Products added to the shopping cart staying in the shopping cart after login # CartBasic.feature:136
    Description: When user has products in the shopping cart when they are signed out they should
    appear in the shopping cart after login (when user had nothing in the shopping cart on his/her account).

    Given The "<browser>" is turned on
    And User is on Home Page
    And User clicks Do koszyka button
    And User clicks Przejdz do koszyka button
    And Shopping cart page is opened
    #login
    When User clicks the CZESC ZALOGUJ SIE hyperlink
    And User enters valid E-mail and valid password in a popup window
    And User clicks the Zaloguj sie button
    Then Title of the product in the cart is correct
    And Quantity one in the input field is correct
    And Browser can be turned off

    Examples: 

  Scenario Outline: (ID: Cart-B-9) Products added to the shopping cart staying in the shopping cart after login # CartBasic.feature:153
    Description: When user has products in the shopping cart when they are signed out they should
    appear in the shopping cart after login (when user had nothing in the shopping cart on his/her account).

    Given The "Chrome" is turned on                                                                             # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                                                    # _LoginCommonSteps.user_is_on_Home_Page()
    And User clicks Do koszyka button                                                                           # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                                                   # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    And Shopping cart page is opened                                                                            # _CartCommonSteps.shopping_cart_page_is_opened()
    #login
    When User clicks the CZESC ZALOGUJ SIE hyperlink                                                            # _LoginCommonSteps.user_clicks_the_CZESC_ZALOGUJ_SIE_hyperlink()
    And User enters valid E-mail and valid password in a popup window                                           # LoginSuccessSteps.user_enters_valid()
    And User clicks the Zaloguj sie button                                                                      # _LoginCommonSteps.user_clicks_button()
    Then Title of the product in the cart is correct                                                            # _CartCommonSteps.title_of_the_products_in_the_cart_is_correct()
    And Quantity one in the input field is correct                                                              # _CartCommonSteps.quantity_one_in_the_input_field_is_correct()
    And Browser can be turned off                                                                               # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-9) Products added to the shopping cart staying in the shopping cart after login # CartBasic.feature:154
    Description: When user has products in the shopping cart when they are signed out they should
    appear in the shopping cart after login (when user had nothing in the shopping cart on his/her account).

    Given The "Firefox" is turned on                                                                            # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                                                    # _LoginCommonSteps.user_is_on_Home_Page()
    And User clicks Do koszyka button                                                                           # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                                                   # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    And Shopping cart page is opened                                                                            # _CartCommonSteps.shopping_cart_page_is_opened()
    #login
    When User clicks the CZESC ZALOGUJ SIE hyperlink                                                            # _LoginCommonSteps.user_clicks_the_CZESC_ZALOGUJ_SIE_hyperlink()
    And User enters valid E-mail and valid password in a popup window                                           # LoginSuccessSteps.user_enters_valid()
    And User clicks the Zaloguj sie button                                                                      # _LoginCommonSteps.user_clicks_button()
    Then Title of the product in the cart is correct                                                            # _CartCommonSteps.title_of_the_products_in_the_cart_is_correct()
    And Quantity one in the input field is correct                                                              # _CartCommonSteps.quantity_one_in_the_input_field_is_correct()
    And Browser can be turned off                                                                               # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-10) Products disappearing from the shopping cart after logout # CartBasic.feature:156
    Description: When user has products in the shopping cart
    they shouldn't be displayed after logout when user isn't signed in.

    Given The "<browser>" is turned on
    And User is on Home Page
    #login
    And User clicks the CZESC ZALOGUJ SIE hyperlink
    And User enters valid E-mail and valid password in a popup window
    And User clicks the Zaloguj sie button
    And Cart is empty
    And User clicks Do koszyka button
    And User clicks Przejdz do koszyka button
    And Shopping cart page is opened
    #logout
    When User clicks WYLOGUJ SIE hyperlink
    Then Quantity zero of the products in the cart is correct
    And Information about empty cart is displayed
    And Browser can be turned off

    Examples: 

  Scenario Outline: (ID: Cart-B-10) Products disappearing from the shopping cart after logout # CartBasic.feature:176
    Description: When user has products in the shopping cart
    they shouldn't be displayed after logout when user isn't signed in.

    Given The "Chrome" is turned on                                                           # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                                  # _LoginCommonSteps.user_is_on_Home_Page()
    #login
    And User clicks the CZESC ZALOGUJ SIE hyperlink                                           # _LoginCommonSteps.user_clicks_the_CZESC_ZALOGUJ_SIE_hyperlink()
    And User enters valid E-mail and valid password in a popup window                         # LoginSuccessSteps.user_enters_valid()
    And User clicks the Zaloguj sie button                                                    # _LoginCommonSteps.user_clicks_button()
    And Cart is empty                                                                         # _CartCommonSteps.cart_is_empty()
    And User clicks Do koszyka button                                                         # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                                 # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    And Shopping cart page is opened                                                          # _CartCommonSteps.shopping_cart_page_is_opened()
    #logout
    When User clicks WYLOGUJ SIE hyperlink                                                    # LogoutSuccessSteps.user_clicks_WYLOGUJ_SIE_hyperlink()
    Then Quantity zero of the products in the cart is correct                                 # _CartCommonSteps.quantity_zero_of_the_products_in_the_cart_is_correct()
    And Information about empty cart is displayed                                             # CartProductDisappearsAfterLogoutSteps.information_about_empty_cart_is_displayed()
    And Browser can be turned off                                                             # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-10) Products disappearing from the shopping cart after logout # CartBasic.feature:177
    Description: When user has products in the shopping cart
    they shouldn't be displayed after logout when user isn't signed in.

    Given The "Firefox" is turned on                                                          # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                                  # _LoginCommonSteps.user_is_on_Home_Page()
    #login
    And User clicks the CZESC ZALOGUJ SIE hyperlink                                           # _LoginCommonSteps.user_clicks_the_CZESC_ZALOGUJ_SIE_hyperlink()
    And User enters valid E-mail and valid password in a popup window                         # LoginSuccessSteps.user_enters_valid()
    And User clicks the Zaloguj sie button                                                    # _LoginCommonSteps.user_clicks_button()
    And Cart is empty                                                                         # _CartCommonSteps.cart_is_empty()
    And User clicks Do koszyka button                                                         # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                                 # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    And Shopping cart page is opened                                                          # _CartCommonSteps.shopping_cart_page_is_opened()
    #logout
    When User clicks WYLOGUJ SIE hyperlink                                                    # LogoutSuccessSteps.user_clicks_WYLOGUJ_SIE_hyperlink()
    Then Quantity zero of the products in the cart is correct                                 # _CartCommonSteps.quantity_zero_of_the_products_in_the_cart_is_correct()
    And Information about empty cart is displayed                                             # CartProductDisappearsAfterLogoutSteps.information_about_empty_cart_is_displayed()
    And Browser can be turned off                                                             # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-11) Products reappearing in the shopping cart after login again # CartBasic.feature:179
    Description: When user has products in the shopping cart they should
    be displayed after logout and login again when user is signed in.

    Given The "<browser>" is turned on
    And User is on Home Page
    #login
    And User clicks the CZESC ZALOGUJ SIE hyperlink
    And User enters valid E-mail and valid password in a popup window
    And User clicks the Zaloguj sie button
    And Cart is empty
    And User clicks Do koszyka button
    And User clicks Przejdz do koszyka button
    And Shopping cart page is opened
    And Information about products is displayed
    #logout
    When User clicks WYLOGUJ SIE hyperlink
    #login
    And User clicks the CZESC ZALOGUJ SIE hyperlink
    And User enters valid E-mail and valid password in a popup window
    And User clicks the Zaloguj sie button
    Then Title of the product in the cart is correct
    And Quantity one in the input field is correct
    And Browser can be turned off

    Examples: 

  Scenario Outline: (ID: Cart-B-11) Products reappearing in the shopping cart after login again # CartBasic.feature:204
    Description: When user has products in the shopping cart they should
    be displayed after logout and login again when user is signed in.

    Given The "Chrome" is turned on                                                             # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                                    # _LoginCommonSteps.user_is_on_Home_Page()
    #login
    And User clicks the CZESC ZALOGUJ SIE hyperlink                                             # _LoginCommonSteps.user_clicks_the_CZESC_ZALOGUJ_SIE_hyperlink()
    And User enters valid E-mail and valid password in a popup window                           # LoginSuccessSteps.user_enters_valid()
    And User clicks the Zaloguj sie button                                                      # _LoginCommonSteps.user_clicks_button()
    And Cart is empty                                                                           # _CartCommonSteps.cart_is_empty()
    And User clicks Do koszyka button                                                           # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                                   # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    And Shopping cart page is opened                                                            # _CartCommonSteps.shopping_cart_page_is_opened()
    And Information about products is displayed                                                 # CartProductStaysAfterLoginAgainSteps.information_about_product_is_displayed()
    #logout
    When User clicks WYLOGUJ SIE hyperlink                                                      # LogoutSuccessSteps.user_clicks_WYLOGUJ_SIE_hyperlink()
    #login
    And User clicks the CZESC ZALOGUJ SIE hyperlink                                             # _LoginCommonSteps.user_clicks_the_CZESC_ZALOGUJ_SIE_hyperlink()
    And User enters valid E-mail and valid password in a popup window                           # LoginSuccessSteps.user_enters_valid()
    And User clicks the Zaloguj sie button                                                      # _LoginCommonSteps.user_clicks_button()
    Then Title of the product in the cart is correct                                            # _CartCommonSteps.title_of_the_products_in_the_cart_is_correct()
    And Quantity one in the input field is correct                                              # _CartCommonSteps.quantity_one_in_the_input_field_is_correct()
    And Browser can be turned off                                                               # _LoginCommonSteps.browser_is_turned_off()

  Scenario Outline: (ID: Cart-B-11) Products reappearing in the shopping cart after login again # CartBasic.feature:205
    Description: When user has products in the shopping cart they should
    be displayed after logout and login again when user is signed in.

    Given The "Firefox" is turned on                                                            # _LoginCommonSteps.classSetup(String)
    And User is on Home Page                                                                    # _LoginCommonSteps.user_is_on_Home_Page()
    #login
    And User clicks the CZESC ZALOGUJ SIE hyperlink                                             # _LoginCommonSteps.user_clicks_the_CZESC_ZALOGUJ_SIE_hyperlink()
    And User enters valid E-mail and valid password in a popup window                           # LoginSuccessSteps.user_enters_valid()
    And User clicks the Zaloguj sie button                                                      # _LoginCommonSteps.user_clicks_button()
    And Cart is empty                                                                           # _CartCommonSteps.cart_is_empty()
    And User clicks Do koszyka button                                                           # _CartCommonSteps.user_clicks_the_Do_koszyka_button()
    And User clicks Przejdz do koszyka button                                                   # _CartCommonSteps.user_click_the_Przejdz_do_koszyka_button()
    And Shopping cart page is opened                                                            # _CartCommonSteps.shopping_cart_page_is_opened()
    And Information about products is displayed                                                 # CartProductStaysAfterLoginAgainSteps.information_about_product_is_displayed()
    #logout
    When User clicks WYLOGUJ SIE hyperlink                                                      # LogoutSuccessSteps.user_clicks_WYLOGUJ_SIE_hyperlink()
    #login
    And User clicks the CZESC ZALOGUJ SIE hyperlink                                             # _LoginCommonSteps.user_clicks_the_CZESC_ZALOGUJ_SIE_hyperlink()
    And User enters valid E-mail and valid password in a popup window                           # LoginSuccessSteps.user_enters_valid()
    And User clicks the Zaloguj sie button                                                      # _LoginCommonSteps.user_clicks_button()
    Then Title of the product in the cart is correct                                            # _CartCommonSteps.title_of_the_products_in_the_cart_is_correct()
    And Quantity one in the input field is correct                                              # _CartCommonSteps.quantity_one_in_the_input_field_is_correct()
    And Browser can be turned off                                                               # _LoginCommonSteps.browser_is_turned_off()
